pipeline {
    agent any
    
    stages {
        stage('Lint') {
            steps {
                script {
                    def files = findFiles(glob: "**/*.py") // Search for Python files recursively in all directories
                    if (files) {
                        for (file in files) {
                            sh "pylint --fail-under 5 ${file.getRemote()}" // Use getRemote() to get the absolute file path
                        }
                    } else {
                        echo "No Python files found in the workspace"
                    }
                }
            }
        }
        stage('Security Scan') {
            steps {
                script {
                    def safety_output = sh(script: 'safety check --full-report', returnStdout: true).trim()
                    echo "Safety Scan Results: ${safety_output}"
                    
                    if (safety_output.contains("InsecurePackage")) {
                        error "Safety scan detected insecure packages. Please review the report."
                    }
                }
            }
        }
        stage('Package') {
            steps {
                script {
                    docker.build('<docker_image_name>') // Replace <docker_image_name> with your desired image name
                    docker.withRegistry('https://registry.hub.docker.com', '<dockerhub_credentials>') {
                        docker.image('<docker_image_name>').push('latest')
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    // SSH into your 3855 VM and execute docker-compose up -d
                    sshagent(['<jenkins_ssh_credentials>']) {
                        sh 'ssh user@3855-vm "cd /path/to/docker-compose; docker-compose pull; docker-compose up -d"'
                    }
                }
            }
        }
    }
    
    post {
        success {
            // Trigger the downstream jobs or perform any other post-build actions
        }
    }
}
